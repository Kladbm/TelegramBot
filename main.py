import logging
import json
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup

# Configure logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# Get API_TOKEN
with open('config.json') as file:
    token = json.load(file)
API_TOKEN = token['bot.token']

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dispatcher = Dispatcher(bot)

ANCIENT, VOID, SACRED = "üíô –î—Ä–µ–≤–Ω–∏–π", "üíú –¢–µ–º–Ω—ã–π", "üíõ –°–∞–∫—Ä–∞–ª"
CLOSED, RETURN = "‚ùå –ó–∞–∫—Ä—ã—Ç—å", "‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è"

close_keyboard_button = InlineKeyboardButton(text=CLOSED, callback_data="close")


@dispatcher.message_handler(commands='start')
async def start_handler(message: types.Message) -> None:
    buttons = [
        [
            KeyboardButton("–†–æ–∫–æ–≤–∞—è –±–∞—à–Ω—è"),
            KeyboardButton("–ö–ª–∞–Ω –±–æ—Å—Å")
        ],
        [
            KeyboardButton("–ê—Ä–µ–Ω–∞"),
            KeyboardButton("–°–æ–±—ã—Ç–∏—è / –¢—É—Ä–Ω–∏—Ä—ã")
        ],
        [
            KeyboardButton("–ö–ª–∞–Ω"),
            KeyboardButton("–î—Ä—É–≥–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        ]
    ]
    await message.reply("It's /start command", reply_markup=ReplyKeyboardMarkup(buttons, resize_keyboard=True))


@dispatcher.message_handler(commands='help')
async def help(message: types.Message) -> None:
    await message.reply("It's /help command")


@dispatcher.message_handler(content_types=types.ContentTypes.TEXT)
async def messages(message: types.Message):
    if message.text == "–†–æ–∫–æ–≤–∞—è –±–∞—à–Ω—è":
        keyboard = InlineKeyboardMarkup(row_width=2) \
            .add(InlineKeyboardButton(text="–õ–µ–≥–∫–∞—è", callback_data="doom_tower_easy"),
                 InlineKeyboardButton(text="–°–ª–æ–∂–Ω–∞—è", callback_data="doom_tower_hard")).row(close_keyboard_button)
        await message.answer("–†–æ–∫–æ–≤–∞—è –±–∞—à–Ω—è", reply_markup=keyboard)

    if message.text == "–ö–ª–∞–Ω –±–æ—Å—Å":
        keyboard = InlineKeyboardMarkup(row_width=3) \
            .add(InlineKeyboardButton(text="4 –ö–ë", callback_data="clan_boss_4CB"),
                 InlineKeyboardButton(text="5 –ö–ë", callback_data="clan_boss_5CB"),
                 InlineKeyboardButton(text="6 –ö–ë", callback_data="clan_boss_6CB")).row(close_keyboard_button)
        await message.answer("–ö–ª–∞–Ω –±–æ—Å—Å", reply_markup=keyboard)

    if message.text == "–ê—Ä–µ–Ω–∞":
        keyboard = InlineKeyboardMarkup(row_width=2) \
            .add(InlineKeyboardButton(text="–û–±—ã—á–Ω–∞—è", callback_data="arena_normal"),
                 InlineKeyboardButton(text="–ì—Ä—É–ø–ø–æ–≤–∞—è", callback_data="arena_group")).row(close_keyboard_button)
        await message.answer("–ê—Ä–µ–Ω–∞", reply_markup=keyboard)

    if message.text == "–°–æ–±—ã—Ç–∏—è / –¢—É—Ä–Ω–∏—Ä—ã":
        keyboard = InlineKeyboardMarkup(row_width=2) \
            .add(InlineKeyboardButton(text="–°–æ–±—ã—Ç–∏—è", callback_data="events"),
                 InlineKeyboardButton(text="–¢—É—Ä–Ω–∏—Ä—ã", callback_data="tournaments")).row(close_keyboard_button)
        await message.answer("–°–æ–±—ã—Ç–∏—è / –¢—É—Ä–Ω–∏—Ä—ã", reply_markup=keyboard)

    if message.text == "–ö–ª–∞–Ω":
        keyboard = InlineKeyboardMarkup(row_width=2) \
            .add(InlineKeyboardButton(text="–°—É–Ω–¥—É–∫", callback_data="clan_chest"),
                 InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", callback_data="clan_shop"),
                 InlineKeyboardButton(text="–¢—É—Ä–Ω–∏—Ä –∫–ª–∞–Ω–æ–≤", callback_data="clan_wars")).row(close_keyboard_button)
        await message.answer("–ö–ª–∞–Ω", reply_markup=keyboard)

    if message.text == "–î—Ä—É–≥–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏":
        keyboard = InlineKeyboardMarkup(row_width=2) \
            .add(InlineKeyboardButton(text="–ü–æ–¥–∑–µ–º–∫–∞", callback_data="other_dungeons"),
                 InlineKeyboardButton(text="–†—ã–Ω–æ–∫", callback_data="other_bazaar"),
                 InlineKeyboardButton(text="–í—Ö–æ–¥", callback_data="other_input"),
                 InlineKeyboardButton(text="–ú–∏—Å—Å–∏–∏", callback_data="other_missions"),
                 InlineKeyboardButton(text="–ó–∞–¥–∞–Ω–∏—è", callback_data="other_tasks"),
                 InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", callback_data="other_shop")).row(close_keyboard_button)
        await message.answer("–î—Ä—É–≥–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", reply_markup=keyboard)


@dispatcher.callback_query_handler(text="close")
async def close_call(callback: types.CallbackQuery):
    await callback.message.edit_text("–î–æ –≤—Å—Ç—Ä–µ—á–∏")
    await callback.answer()


@dispatcher.callback_query_handler(text="doom_tower_easy")
async def doom_tower_easy_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="doom_tower_return"), close_keyboard_button)
    await callback.message.edit_text("–õ–µ–≥–∫–∞—è", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="doom_tower_hard")
async def doom_tower_hard_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=3) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void"),
             InlineKeyboardButton(text=SACRED, callback_data="sacred")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="doom_tower_return"), close_keyboard_button)
    await callback.message.edit_text("–°–ª–æ–∂–Ω–∞—è", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="doom_tower_return")
async def doom_tower_return_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2) \
        .add(InlineKeyboardButton(text="–õ–µ–≥–∫–∞—è", callback_data="doom_tower_easy"),
             InlineKeyboardButton(text="–°–ª–æ–∂–Ω–∞—è", callback_data="doom_tower_hard")).row(close_keyboard_button)
    await callback.message.edit_text("–†–æ–∫–æ–≤–∞—è –±–∞—à–Ω—è", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="clan_boss_4CB")
async def clan_boss_4CB_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="clan_boss_return"), close_keyboard_button)
    await callback.message.edit_text("4 –ö–ª–∞–Ω –±–æ—Å—Å", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="clan_boss_5CB")
async def clan_boss_5CB_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=3) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void"),
             InlineKeyboardButton(text=SACRED, callback_data="sacred")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="clan_boss_return"), close_keyboard_button)
    await callback.message.edit_text("5 –ö–ª–∞–Ω –±–æ—Å—Å", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="clan_boss_6CB")
async def clan_boss_6CB_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=3) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void"),
             InlineKeyboardButton(text=SACRED, callback_data="sacred")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="clan_boss_return"), close_keyboard_button)
    await callback.message.edit_text("6 –ö–ª–∞–Ω –±–æ—Å—Å", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="clan_boss_return")
async def clan_boss_return_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=3) \
        .add(InlineKeyboardButton(text="4 –ö–ë", callback_data="clan_boss_4CB"),
             InlineKeyboardButton(text="5 –ö–ë", callback_data="clan_boss_5CB"),
             InlineKeyboardButton(text="6 –ö–ë", callback_data="clan_boss_6CB")).row(close_keyboard_button)
    await callback.message.edit_text("–ö–ª–∞–Ω –±–æ—Å—Å", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="arena_normal")
async def arena_normal_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=3) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void"),
             InlineKeyboardButton(text=SACRED, callback_data="sacred")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="arena_return"), close_keyboard_button)
    await callback.message.edit_text("–û–±—ã—á–Ω–∞—è –∞—Ä–µ–Ω–∞", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="arena_group")
async def arena_group_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=3) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void"),
             InlineKeyboardButton(text=SACRED, callback_data="sacred")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="arena_return"), close_keyboard_button)
    await callback.message.edit_text("–ì—Ä—É–ø–ø–æ–≤–∞—è –∞—Ä–µ–Ω–∞", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="arena_return")
async def arena_return_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2) \
        .add(InlineKeyboardButton(text="–û–±—ã—á–Ω–∞—è", callback_data="arena_normal"),
             InlineKeyboardButton(text="–ì—Ä—É–ø–ø–æ–≤–∞—è", callback_data="arena_group")).row(close_keyboard_button)
    await callback.message.edit_text("–ê—Ä–µ–Ω–∞", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="events")
async def events_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=3) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void"),
             InlineKeyboardButton(text=SACRED, callback_data="sacred")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="events_return"), close_keyboard_button)
    await callback.message.edit_text("–°–æ–±—ã—Ç–∏—è", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="tournaments")
async def tournaments_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=3) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void"),
             InlineKeyboardButton(text=SACRED, callback_data="sacred")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="tournaments_return"), close_keyboard_button)
    await callback.message.edit_text("–¢—É—Ä–Ω–∏—Ä—ã", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text=["events_return", "tournaments_return"])
async def events_tournaments_return_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2) \
        .add(InlineKeyboardButton(text="–°–æ–±—ã—Ç–∏—è", callback_data="events"),
             InlineKeyboardButton(text="–¢—É—Ä–Ω–∏—Ä—ã", callback_data="tournaments")).row(close_keyboard_button)
    await callback.message.edit_text("–°–æ–±—ã—Ç–∏—è / –¢—É—Ä–Ω–∏—Ä—ã", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="clan_wars")
async def clan_wars_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=3) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void"),
             InlineKeyboardButton(text=SACRED, callback_data="sacred")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="clan_return"), close_keyboard_button)
    await callback.message.edit_text("–ö–ª–∞–Ω–æ–≤—ã–µ –≤–æ–π–Ω—ã", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="clan_chest")
async def clan_chest_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=1) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="clan_return"), close_keyboard_button)
    await callback.message.edit_text("–ö–ª–∞–Ω–æ–≤—ã–π —Å—É–Ω–¥—É–∫", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="clan_shop")
async def clan_shop_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=1) \
        .add(InlineKeyboardButton(text=VOID, callback_data="void")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="clan_return"), close_keyboard_button)
    await callback.message.edit_text("–ö–ª–∞–Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="clan_return")
async def clan_return_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2) \
        .add(InlineKeyboardButton(text="–°—É–Ω–¥—É–∫", callback_data="clan_chest"),
             InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", callback_data="clan_shop"),
             InlineKeyboardButton(text="–¢—É—Ä–Ω–∏—Ä –∫–ª–∞–Ω–æ–≤", callback_data="clan_wars")).row(close_keyboard_button)
    await callback.message.edit_text("–ö–ª–∞–Ω", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="other_dungeons")
async def other_dungeons_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=1) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="other_return"), close_keyboard_button)
    await callback.message.edit_text("–ü–æ–¥–∑–µ–º–∫–∞", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="other_bazaar")
async def other_bazaar_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=1) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="other_return"), close_keyboard_button)
    await callback.message.edit_text("–ë–∞–∑–∞—Ä", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="other_input")
async def other_input_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="other_return"), close_keyboard_button)
    await callback.message.edit_text("–í—Ö–æ–¥", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="other_missions")
async def other_missions_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="other_return"), close_keyboard_button)
    await callback.message.edit_text("–ú–∏—Å—Å–∏–∏", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="other_tasks")
async def other_tasks_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=1) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient"),
             InlineKeyboardButton(text=VOID, callback_data="void"),
             InlineKeyboardButton(text=SACRED, callback_data="sacred")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="other_return"), close_keyboard_button)
    await callback.message.edit_text("–ó–∞–¥–∞–Ω–∏—è", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="other_shop")
async def other_shop_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=1) \
        .add(InlineKeyboardButton(text=ANCIENT, callback_data="ancient")) \
        .row(InlineKeyboardButton(text=RETURN, callback_data="other_return"), close_keyboard_button)
    await callback.message.edit_text("–ú–∞–≥–∞–∑–∏–Ω", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="other_return")
async def other_return_call(callback: types.CallbackQuery):
    keyboard = InlineKeyboardMarkup(row_width=2) \
        .add(InlineKeyboardButton(text="–ü–æ–¥–∑–µ–º–∫–∞", callback_data="other_dungeons"),
             InlineKeyboardButton(text="–†—ã–Ω–æ–∫", callback_data="other_bazaar"),
             InlineKeyboardButton(text="–í—Ö–æ–¥", callback_data="other_input"),
             InlineKeyboardButton(text="–ú–∏—Å—Å–∏–∏", callback_data="other_missions"),
             InlineKeyboardButton(text="–ó–∞–¥–∞–Ω–∏—è", callback_data="other_tasks"),
             InlineKeyboardButton(text="–ú–∞–≥–∞–∑–∏–Ω", callback_data="other_shop")).row(close_keyboard_button)
    await callback.message.edit_text("–î—Ä—É–≥–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", reply_markup=keyboard)
    await callback.answer()


@dispatcher.callback_query_handler(text="ancient")
async def ancient_call(callback: types.CallbackQuery):
    await callback.message.edit_text(f"–î–æ–±–∞–≤–ª–µ–Ω {ANCIENT.lower()} –æ—Å–∫–æ–ª–æ–∫ –≤ ")
    await callback.answer()


@dispatcher.callback_query_handler(text="void")
async def ancient_call(callback: types.CallbackQuery):
    await callback.message.edit_text(f"–î–æ–±–∞–≤–ª–µ–Ω {VOID.lower()} –æ—Å–∫–æ–ª–æ–∫ –≤ ")
    await callback.answer()


@dispatcher.callback_query_handler(text="sacred")
async def ancient_call(callback: types.CallbackQuery):
    await callback.message.edit_text(f"–î–æ–±–∞–≤–ª–µ–Ω {SACRED.lower()} –æ—Å–∫–æ–ª–æ–∫ –≤ ")
    await callback.answer()


if __name__ == '__main__':
    executor.start_polling(dispatcher, skip_updates=True)
